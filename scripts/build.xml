<?xml version="1.0" encoding="UTF-8"?>

<project name="PayCart" default="main" description="A build script to build PayCart kit." >    

	<!-- ============================================  -->
	<!-- (DEFAULT)Target: main                           -->
	<!-- ============================================  -->
    <target name="main"  depends="pre_config,get_build_number">
    <!-- Main Menu -->
    <echo>============================================</echo>
    <echo>BUILD BEGIN</echo>	
    <echo>============================================</echo>
    	
<!--    	<echo msg="Pre-configuration: Define preconfig variable" />-->
<!--			<phingcall target="pre_config" />-->
			
<!--		<echo msg="Get Build number: Get global number of commit"/>-->
<!--			<phingcall target="get_build_number" />-->
			
    	<echo msg="Deleteing: Packeage and tmp directory "/>
    		<delete dir="${dir.packages}" includeemptydirs="true" />
<!--			<delete dir="${dir.tmp}" includeemptydirs="true" />-->
		
		<echo msg="Make Dir: Packeage"/>
			<mkdir dir="${dir.packages}" />
			
		<echo msg="Export Dir: Source to Tmp directory"/>
			<phingcall target="copy_source_to_tmp" />
		
		<echo msg="Zip: Package creating"/>
		<zip destfile="${dir.packages}/${project.shortform}-${file.version}.${file.extension}" 
			 basedir="${dir.tmp}" />
        
    <echo>============================================</echo>
    <echo>BUILD END	</echo>	
    <echo>============================================</echo>

    <echo>============================================</echo>
    <echo>PLUGIN BUILD START</echo>	
    <echo>============================================</echo>
	<phing phingfile="appbuild.xml" inheritAll="true"/>
    <echo>============================================</echo>
    <echo>PLUGIN BUILD END</echo>	
    <echo>============================================</echo>

    </target>
	
	<!-- ============================================  -->
	<!-- Target: Pre-config                            -->
	<!-- ============================================  -->
    <target name="pre_config">
    	<!-- Get os type	-->
		<php expression="(PHP_OS == 'WINNT') ? 'win' :'unix'" returnProperty="os_name"/>
		
		<if>
			<equals arg1="${os_name}" arg2="unix" />
			<then>
				<property name='build.prop.file' value="unix/build.prop"  override="true" />		
			</then>
			<elseif>
				<equals arg1="${os_name}" arg2="win" />
				<then>
					<property name='build.prop.file' value="win/build.prop"  override="true" />
				</then>
			</elseif>
			<else>
		   		<echo message="Fail in OS idetification" />
		   		<php expression="exit();"/>
		 	</else>
		</if>
		<!-- Load Prop files		-->	
		<property file="${build.prop.file}"	override="true" />	
	</target>
	
	<!-- ============================================  -->
	<!-- Target: Get Build Bumber                      -->
	<!-- ============================================  -->
    <target name="get_build_number">
    	<exec command="git rev-list --all | wc -l" dir="${dir.root}" outputProperty="build.number"  />
		<property name='build.number' value="${build.number}"  override="true" />
		<echo msg=" 'build.number' Property set to ${build.number}" />
	</target>
	
	<!-- ============================================  -->
	<!-- Target: Copy Source to tmp dir                -->
	<!-- ============================================  -->
	<target name="copy_source_to_tmp" description="Export files from a local working copy" >		
		<!-- Copy: Source folder to tmp dir		-->
		<copy todir="${dir.tmp}" >
		  <fileset dir="${dir.src}" />
		</copy>

		<!-- Apply the version change to all files. -->
		<reflexive>
			<fileset dir="${dir.tmp}">
			     <include name="**/*.*" />
			</fileset>
			 <filterchain>
				<replacetokens>
				    <token key="global.version" 	value="${file.version}" />
				    <token key="global.build.number"   	value="${build.number}" />
				</replacetokens>
			</filterchain>
		</reflexive>
		
<!--		<property name="jsdirs" value="site/media/js, site/xiframework/media/js/, site/templates/default/_media/js/,admin/templates/default/_media/js/" />-->
<!--		<foreach list="${jsdirs}" param="jsdir" target="minifyjs" />-->

	</target>
	
</project>
